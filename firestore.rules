rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Users can only read and write their own data.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /offices/{officeId} {
      // Allow read for authenticated users, but write only for the owner.
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == officeId;
    }

    match /clients/{clientId} {
      // Client data can be accessed by any member of the same office.
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == resource.data.officeId;
    }

    match /processes/{processId} {
      // Allow read/write if the user is part of the same office.
      // More granular control can be added (e.g., only collaborators can write).
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == resource.data.officeId;
      
      // Rules for subcollections
      match /documents/{documentId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/processes/$(processId)).data.officeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId;
      }
       match /chatMessages/{messageId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/processes/$(processId)).data.officeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId;
      }
    }

    match /events/{eventId} {
      // Events can be managed by anyone in the same office.
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == resource.data.officeId;
    }
    
    match /document_templates/{templateId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == resource.data.officeId;
    }

    match /financial_tasks/{taskId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == resource.data.officeId;
    }
  }
}